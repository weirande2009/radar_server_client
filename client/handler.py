import protobuf
import struct

# define the command id
MINIMAP = 0
MOVING = 1

class Handler:
    """
    @func: Sending bytes to the radar server
    according to the data list generated by previous
    algorithm. The message format is as the following:
    ----------------------------------------------------------------------------
    |4 bytes head + 4 bytes cmdId + 4 bytes length + n bytes data + 4 bytes tail|
    |    ----           ----           ----         ----...----       ----     |
    |      4              4              4               n              4      |
    ----------------------------------------------------------------------------
    """
    package_head = 0x10011001
    package_tail = 0x10011001

    def __init__(self):
        self.msg = "".encode()

    def handle(self, data_list: list, cmd: int) -> bytes:
        data = "".encode()
        if cmd == MINIMAP:
            data = protobuf.MinimapOut(data_list).get_data()
        elif cmd == MOVING:
            data = protobuf.MovingOut(data_list).get_data()
        self.msg = self.generate_sent_msg(data, cmd)
        return self.msg

    def generate_sent_msg(self, sent_data: bytes, cmd: int) -> bytes:
        sent_msg_list = [self.package_head, cmd]
        sent_msg_length = 12 + len(sent_data)
        sent_msg_list.append(sent_msg_length)
        sent_msg_list.append(sent_data)
        sent_msg_list.append(self.package_tail)
        return struct.pack("<iii"+str(len(sent_data))+"si", *sent_msg_list)